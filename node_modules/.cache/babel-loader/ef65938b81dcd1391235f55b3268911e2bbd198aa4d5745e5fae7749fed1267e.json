{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getIcon}from'./History';import Header from'./Header';// Function to format the date as \"YYYY-MM-DD HH\"\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const formatDateToHour=timestamp=>{const date=new Date(timestamp);return`${date.getFullYear()}-${(date.getMonth()+1).toString().padStart(2,'0')}-${date.getDate().toString().padStart(2,'0')} ${date.getHours().toString().padStart(2,'0')}:00`;};const HistoryList=_ref=>{let{setCurrentView,setConversation}=_ref;const[historyItems,setHistoryItems]=useState([]);const[conversations,setConversations]=useState([]);// Store conversations separately\n// Function to group the conversations by hour\nconst groupConversationsByHour=history=>{const grouped={};history.forEach(message=>{const hour=formatDateToHour(message.timestamp);if(!grouped[hour]){grouped[hour]=[];}grouped[hour].push(message);});return Object.entries(grouped).map(_ref2=>{let[time,messages]=_ref2;return{time,messages};});};// Fetch the chat history from the backend API\nuseEffect(()=>{const fetchChatHistory=async()=>{try{const response=await fetch('https://leapthelimit-1057493174729.me-west1.run.app/chat-history');if(!response.ok)throw new Error('Failed to fetch chat history');const data=await response.json();const{history}=data;if(Array.isArray(history)){const groupedConversations=groupConversationsByHour(history);const summarizedHistory=groupedConversations.map((conversationBlock,index)=>{return{type:'chat',text:`Conversation at: ${conversationBlock.time}`,conversation:conversationBlock.messages};});setConversations(groupedConversations);// Store full conversations\nsetHistoryItems(summarizedHistory);// Store summarized items\n}else{console.error('Unexpected data format:',data);}}catch(error){console.error('Error fetching chat history:',error);}};fetchChatHistory();},[]);// Handle clicking a past conversation\nconst handleConversationClick=index=>{const selectedConversation=conversations[index];if(selectedConversation){// Pass selected conversation to App.js and switch to chat view\nsetConversation(selectedConversation.messages.map(msg=>({text:msg.message,sender:msg.category==='user'?'user':'Finlix'})));setCurrentView('chat');}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{setCurrentView:setCurrentView,isHistory:true}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-between items-center mb-4\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"text-white text-xl font-medium\",children:\"Messages History\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2 overflow-y-auto max-h-[630px] mb-12 scrollbar-none\",children:historyItems.map((item,index)=>/*#__PURE__*/_jsxs(\"button\",{className:\"bg-[#272727] p-3 rounded-2xl flex items-center justify-start space-x-3 w-full\",onClick:()=>handleConversationClick(index)// Handle click\n,children:[getIcon(item.type),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-300 text-xs\",children:item.text})]},index))})]});};export default HistoryList;","map":{"version":3,"names":["React","useState","useEffect","getIcon","Header","jsx","_jsx","jsxs","_jsxs","formatDateToHour","timestamp","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","HistoryList","_ref","setCurrentView","setConversation","historyItems","setHistoryItems","conversations","setConversations","groupConversationsByHour","history","grouped","forEach","message","hour","push","Object","entries","map","_ref2","time","messages","fetchChatHistory","response","fetch","ok","Error","data","json","Array","isArray","groupedConversations","summarizedHistory","conversationBlock","index","type","text","conversation","console","error","handleConversationClick","selectedConversation","msg","sender","category","children","isHistory","className","item","onClick"],"sources":["C:/Users/a222_/Desktop/finlit-widget-main/src/components/HistoryList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getIcon } from './History';\nimport Header from './Header';\n\n// Function to format the date as \"YYYY-MM-DD HH\"\nconst formatDateToHour = (timestamp) => {\n  const date = new Date(timestamp);\n  return `${date.getFullYear()}-${(date.getMonth() + 1)\n    .toString()\n    .padStart(2, '0')}-${date\n    .getDate()\n    .toString()\n    .padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:00`;\n};\n\nconst HistoryList = ({ setCurrentView, setConversation }) => {\n  const [historyItems, setHistoryItems] = useState([]);\n  const [conversations, setConversations] = useState([]);  // Store conversations separately\n\n  // Function to group the conversations by hour\n  const groupConversationsByHour = (history) => {\n    const grouped = {};\n    history.forEach((message) => {\n      const hour = formatDateToHour(message.timestamp);\n      if (!grouped[hour]) {\n        grouped[hour] = [];\n      }\n      grouped[hour].push(message);\n    });\n\n    return Object.entries(grouped).map(([time, messages]) => ({\n      time,\n      messages,\n    }));\n  };\n\n  // Fetch the chat history from the backend API\n  useEffect(() => {\n    const fetchChatHistory = async () => {\n      try {\n        const response = await fetch(\n          'https://leapthelimit-1057493174729.me-west1.run.app/chat-history'\n        );\n        if (!response.ok) throw new Error('Failed to fetch chat history');\n\n        const data = await response.json();\n        const { history } = data;\n\n        if (Array.isArray(history)) {\n          const groupedConversations = groupConversationsByHour(history);\n\n          const summarizedHistory = groupedConversations.map(\n            (conversationBlock, index) => {\n              return {\n                type: 'chat',\n                text: `Conversation at: ${conversationBlock.time}`,\n                conversation: conversationBlock.messages,\n              };\n            }\n          );\n\n          setConversations(groupedConversations);  // Store full conversations\n          setHistoryItems(summarizedHistory);  // Store summarized items\n        } else {\n          console.error('Unexpected data format:', data);\n        }\n      } catch (error) {\n        console.error('Error fetching chat history:', error);\n      }\n    };\n\n    fetchChatHistory();\n  }, []);\n\n  // Handle clicking a past conversation\n  const handleConversationClick = (index) => {\n    const selectedConversation = conversations[index];\n    if (selectedConversation) {\n      // Pass selected conversation to App.js and switch to chat view\n      setConversation(\n        selectedConversation.messages.map((msg) => ({\n          text: msg.message,\n          sender: msg.category === 'user' ? 'user' : 'Finlix',\n        }))\n      );\n      setCurrentView('chat');\n    }\n  };\n\n  return (\n    <div>\n      <Header setCurrentView={setCurrentView} isHistory={true} />\n      <div className=\"flex justify-between items-center mb-4\">\n        <h2 className=\"text-white text-xl font-medium\">Messages History</h2>\n      </div>\n      <div className=\"space-y-2 overflow-y-auto max-h-[630px] mb-12 scrollbar-none\">\n        {historyItems.map((item, index) => (\n          <button\n            key={index}\n            className=\"bg-[#272727] p-3 rounded-2xl flex items-center justify-start space-x-3 w-full\"\n            onClick={() => handleConversationClick(index)}  // Handle click\n          >\n            {getIcon(item.type)}\n            <span className=\"text-gray-300 text-xs\">{item.text}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,OAAO,KAAQ,WAAW,CACnC,MAAO,CAAAC,MAAM,KAAM,UAAU,CAE7B;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,gBAAgB,CAAIC,SAAS,EAAK,CACtC,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACF,SAAS,CAAC,CAChC,MAAO,GAAGC,IAAI,CAACE,WAAW,CAAC,CAAC,IAAI,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAG,CAAC,EACjDC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,IAAIL,IAAI,CACxBM,OAAO,CAAC,CAAC,CACTF,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,IAAIL,IAAI,CAACO,QAAQ,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,CACzE,CAAC,CAED,KAAM,CAAAG,WAAW,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,cAAc,CAAEC,eAAgB,CAAC,CAAAF,IAAA,CACtD,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACwB,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAAG;AAEzD;AACA,KAAM,CAAA0B,wBAAwB,CAAIC,OAAO,EAAK,CAC5C,KAAM,CAAAC,OAAO,CAAG,CAAC,CAAC,CAClBD,OAAO,CAACE,OAAO,CAAEC,OAAO,EAAK,CAC3B,KAAM,CAAAC,IAAI,CAAGvB,gBAAgB,CAACsB,OAAO,CAACrB,SAAS,CAAC,CAChD,GAAI,CAACmB,OAAO,CAACG,IAAI,CAAC,CAAE,CAClBH,OAAO,CAACG,IAAI,CAAC,CAAG,EAAE,CACpB,CACAH,OAAO,CAACG,IAAI,CAAC,CAACC,IAAI,CAACF,OAAO,CAAC,CAC7B,CAAC,CAAC,CAEF,MAAO,CAAAG,MAAM,CAACC,OAAO,CAACN,OAAO,CAAC,CAACO,GAAG,CAACC,KAAA,MAAC,CAACC,IAAI,CAAEC,QAAQ,CAAC,CAAAF,KAAA,OAAM,CACxDC,IAAI,CACJC,QACF,CAAC,EAAC,CAAC,CACL,CAAC,CAED;AACArC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAC1B,kEACF,CAAC,CACD,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAEjE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,KAAM,CAAElB,OAAQ,CAAC,CAAGiB,IAAI,CAExB,GAAIE,KAAK,CAACC,OAAO,CAACpB,OAAO,CAAC,CAAE,CAC1B,KAAM,CAAAqB,oBAAoB,CAAGtB,wBAAwB,CAACC,OAAO,CAAC,CAE9D,KAAM,CAAAsB,iBAAiB,CAAGD,oBAAoB,CAACb,GAAG,CAChD,CAACe,iBAAiB,CAAEC,KAAK,GAAK,CAC5B,MAAO,CACLC,IAAI,CAAE,MAAM,CACZC,IAAI,CAAE,oBAAoBH,iBAAiB,CAACb,IAAI,EAAE,CAClDiB,YAAY,CAAEJ,iBAAiB,CAACZ,QAClC,CAAC,CACH,CACF,CAAC,CAEDb,gBAAgB,CAACuB,oBAAoB,CAAC,CAAG;AACzCzB,eAAe,CAAC0B,iBAAiB,CAAC,CAAG;AACvC,CAAC,IAAM,CACLM,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAEZ,IAAI,CAAC,CAChD,CACF,CAAE,MAAOY,KAAK,CAAE,CACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDjB,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAkB,uBAAuB,CAAIN,KAAK,EAAK,CACzC,KAAM,CAAAO,oBAAoB,CAAGlC,aAAa,CAAC2B,KAAK,CAAC,CACjD,GAAIO,oBAAoB,CAAE,CACxB;AACArC,eAAe,CACbqC,oBAAoB,CAACpB,QAAQ,CAACH,GAAG,CAAEwB,GAAG,GAAM,CAC1CN,IAAI,CAAEM,GAAG,CAAC7B,OAAO,CACjB8B,MAAM,CAAED,GAAG,CAACE,QAAQ,GAAK,MAAM,CAAG,MAAM,CAAG,QAC7C,CAAC,CAAC,CACJ,CAAC,CACDzC,cAAc,CAAC,MAAM,CAAC,CACxB,CACF,CAAC,CAED,mBACEb,KAAA,QAAAuD,QAAA,eACEzD,IAAA,CAACF,MAAM,EAACiB,cAAc,CAAEA,cAAe,CAAC2C,SAAS,CAAE,IAAK,CAAE,CAAC,cAC3D1D,IAAA,QAAK2D,SAAS,CAAC,wCAAwC,CAAAF,QAAA,cACrDzD,IAAA,OAAI2D,SAAS,CAAC,gCAAgC,CAAAF,QAAA,CAAC,kBAAgB,CAAI,CAAC,CACjE,CAAC,cACNzD,IAAA,QAAK2D,SAAS,CAAC,8DAA8D,CAAAF,QAAA,CAC1ExC,YAAY,CAACa,GAAG,CAAC,CAAC8B,IAAI,CAAEd,KAAK,gBAC5B5C,KAAA,WAEEyD,SAAS,CAAC,+EAA+E,CACzFE,OAAO,CAAEA,CAAA,GAAMT,uBAAuB,CAACN,KAAK,CAAI;AAAA,CAAAW,QAAA,EAE/C5D,OAAO,CAAC+D,IAAI,CAACb,IAAI,CAAC,cACnB/C,IAAA,SAAM2D,SAAS,CAAC,uBAAuB,CAAAF,QAAA,CAAEG,IAAI,CAACZ,IAAI,CAAO,CAAC,GALrDF,KAMC,CACT,CAAC,CACC,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}