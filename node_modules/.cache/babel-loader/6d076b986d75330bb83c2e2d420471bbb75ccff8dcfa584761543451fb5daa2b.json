{"ast":null,"code":"import React,{useState,useEffect,useRef,useCallback}from'react';import{AudioLines,Globe,MicIcon,Users}from'lucide-react';import Header from'./Header';import micBg from'../assets/images/circleDiv.svg';import FoxAvatar from'./FoxAvatar';import AvatarSelector from'./AvatarSelector';import CatAvatar from'./CatAvatar';import RobotAvatar from'./RobotAvatar';import MouseAvatar from'./MouseAvatar';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const VoiceChat=_ref=>{let{setCurrentView}=_ref;const[speaking,setSpeaking]=useState(false);const[showLanguages,setShowLanguages]=useState(false);const[selectedLanguage,setSelectedLanguage]=useState('EN');const[botResponse,setBotResponse]=useState('What do you know about Finance?');const[responseWords,setResponseWords]=useState([]);const[currentWordIndex,setCurrentWordIndex]=useState(0);const recognitionRef=useRef(null);const audioInstanceRef=useRef(null);const serverUrl='https://leapthelimit-1057493174729.me-west1.run.app';const wordsPerBatch=7;const responseUpdateInterval=2500;const[audioPlaying,setAudioPlaying]=useState(false);const[currentAvatar,setCurrentAvatar]=useState('fox');const[isListening,setIsListening]=useState(false);// Set up speech recognition (webkitSpeechRecognition for Chrome)\nuseEffect(()=>{const SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;if(SpeechRecognition){const recognition=new SpeechRecognition();recognition.continuous=false;recognition.interimResults=false;recognition.lang=selectedLanguage==='EN'?'en-US':selectedLanguage==='عر'?'ar-SA':'he-IL';recognition.onstart=()=>{if(audioInstanceRef.current){audioInstanceRef.current.pause();audioInstanceRef.current=null;}setIsListening(true);setSpeaking(false);setBotResponse('Listening...');document.querySelectorAll('.circle').forEach(circle=>{circle.classList.add('circle-listening');});};recognition.onerror=event=>{console.error('Speech recognition error',event);setBotResponse('Error occurred while listening.');document.querySelectorAll('.circle').forEach(circle=>{circle.classList.remove('circle-listening');});setSpeaking(false);setIsListening(false);};recognition.onend=()=>{setIsListening(false);setSpeaking(false);setBotResponse('Generating...');document.querySelectorAll('.circle').forEach(circle=>{circle.classList.remove('circle-listening');});};recognition.onresult=async event=>{const transcript=event.results[0][0].transcript;setBotResponse('');await handleUserMessage(transcript);};recognitionRef.current=recognition;}else{alert('Speech recognition is not supported in this browser. Please use Google Chrome.');}},[selectedLanguage]);const startListening=()=>{if(recognitionRef.current){recognitionRef.current.start();setBotResponse('Listening...');}};const toggleLanguages=()=>{setShowLanguages(!showLanguages);};const getLanguageCode=()=>{switch(selectedLanguage){case'עב':return'he-IL';case'عر':return'ar-SA';case'EN':default:return'en-US';}};const handleUserMessage=useCallback(async message=>{try{const chatResponse=await fetch(`${serverUrl}/chat`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message,language:getLanguageCode()})});const chatData=await chatResponse.json();const botReply=chatData.response;await fetch(`${serverUrl}/save-chat-message`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message,category:'user'})});await fetch(`${serverUrl}/save-chat-message`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:botReply,category:'bot'})});// Get voice based on avatar\nconst getVoiceForAvatar=()=>{switch(currentAvatar){case'robot':return'en-US-Standard-B';// More robotic male voice\ncase'cat':return'en-US-Standard-E';// Higher pitched female voice\ncase'fox':default:return'en-US-Standard-C';// Neutral female voice\n}};const ttsResponse=await fetch(`${serverUrl}/synthesize`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({text:botReply,language_code:getLanguageCode(),voice_name:getVoiceForAvatar(),speaking_rate:currentAvatar==='robot'?0.9:1.0,pitch:currentAvatar==='robot'?0.5:currentAvatar==='cat'?1.2:1.0})});const ttsData=await ttsResponse.json();const audioContent=ttsData.audioContent;setResponseWords(botReply.split(' '));setCurrentWordIndex(0);if(audioInstanceRef.current){audioInstanceRef.current.pause();}audioInstanceRef.current=new Audio(`data:audio/mp3;base64,${audioContent}`);audioInstanceRef.current.onplay=()=>{setAudioPlaying(true);setSpeaking(true);};audioInstanceRef.current.onended=()=>{setAudioPlaying(false);setSpeaking(false);};audioInstanceRef.current.play();}catch(error){console.error('Error:',error);setBotResponse('Error occurred while processing your message.');setSpeaking(false);setAudioPlaying(false);}},[getLanguageCode,serverUrl,currentAvatar]);useEffect(()=>{if(responseWords.length>0&&currentWordIndex<responseWords.length){const timer=setTimeout(()=>{const wordsToShow=responseWords.slice(currentWordIndex,currentWordIndex+wordsPerBatch).join(' ');setBotResponse(wordsToShow);setCurrentWordIndex(prevIndex=>prevIndex+wordsPerBatch);},responseUpdateInterval);return()=>clearTimeout(timer);}},[currentWordIndex,responseWords,handleUserMessage,wordsPerBatch,responseUpdateInterval]);// Add effect to handle avatar changes\nuseEffect(()=>{// Stop current audio when avatar changes\nif(audioInstanceRef.current){audioInstanceRef.current.pause();audioInstanceRef.current=null;}setAudioPlaying(false);setSpeaking(false);setBotResponse('What do you know about Finance?');},[currentAvatar]);const renderAvatar=()=>{switch(currentAvatar){case'robot':return/*#__PURE__*/_jsx(RobotAvatar,{isSpeaking:speaking||audioPlaying,isListening:isListening});case'cat':return/*#__PURE__*/_jsx(CatAvatar,{isSpeaking:speaking||audioPlaying,isListening:isListening});case'mouse':return/*#__PURE__*/_jsx(MouseAvatar,{isSpeaking:speaking||audioPlaying,isListening:isListening});case'fox':default:return/*#__PURE__*/_jsx(FoxAvatar,{isSpeaking:speaking||audioPlaying,isListening:isListening});}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{setCurrentView:setCurrentView}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-black h-full w-full flex flex-col items-center justify-start text-white relative overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-[45%] w-full flex justify-center items-center\",children:renderAvatar()}),/*#__PURE__*/_jsx(\"div\",{className:\"h-[45%] flex items-start justify-center px-4\",children:/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-medium text-center max-w-[80%]\",children:botResponse.split(' ').map((word,index)=>/*#__PURE__*/_jsxs(\"span\",{className:\"text-white\",children:[word,\" \"]},index))})}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bottom-14 left-0 right-0 flex justify-between items-center px-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex space-x-4\",children:/*#__PURE__*/_jsx(AvatarSelector,{currentAvatar:currentAvatar,onAvatarChange:setCurrentAvatar})}),/*#__PURE__*/_jsx(\"button\",{onClick:startListening,className:\"p-4 rounded-full\",style:{background:`url(${micBg})`,backgroundSize:'cover'},children:speaking?/*#__PURE__*/_jsx(AudioLines,{size:30}):/*#__PURE__*/_jsx(MicIcon,{size:30})}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:toggleLanguages,className:\"p-2 rounded-full bg-[#272626]\",children:/*#__PURE__*/_jsx(Globe,{size:24})}),showLanguages&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-full right-1 mb-2 flex flex-col space-y-2\",children:['עב','عر','EN'].map(lang=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setSelectedLanguage(lang);setShowLanguages(false);},className:`p-2 rounded-full text-xs flex items-center justify-center ${selectedLanguage===lang?'bg-purple-600':'bg-[#272626]'}`,children:lang},lang))})]})]})]})]});};export default VoiceChat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","AudioLines","Globe","MicIcon","Users","Header","micBg","FoxAvatar","AvatarSelector","CatAvatar","RobotAvatar","MouseAvatar","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","VoiceChat","_ref","setCurrentView","speaking","setSpeaking","showLanguages","setShowLanguages","selectedLanguage","setSelectedLanguage","botResponse","setBotResponse","responseWords","setResponseWords","currentWordIndex","setCurrentWordIndex","recognitionRef","audioInstanceRef","serverUrl","wordsPerBatch","responseUpdateInterval","audioPlaying","setAudioPlaying","currentAvatar","setCurrentAvatar","isListening","setIsListening","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onstart","current","pause","document","querySelectorAll","forEach","circle","classList","add","onerror","event","console","error","remove","onend","onresult","transcript","results","handleUserMessage","alert","startListening","start","toggleLanguages","getLanguageCode","message","chatResponse","fetch","method","headers","body","JSON","stringify","language","chatData","json","botReply","response","category","getVoiceForAvatar","ttsResponse","text","language_code","voice_name","speaking_rate","pitch","ttsData","audioContent","split","Audio","onplay","onended","play","length","timer","setTimeout","wordsToShow","slice","join","prevIndex","clearTimeout","renderAvatar","isSpeaking","children","className","map","word","index","onAvatarChange","onClick","style","background","backgroundSize","size"],"sources":["/workspaces/finlit-widget/src/components/VoiceChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { AudioLines, Globe, MicIcon, Users } from 'lucide-react';\nimport Header from './Header';\nimport micBg from '../assets/images/circleDiv.svg';\nimport FoxAvatar from './FoxAvatar';\nimport AvatarSelector from './AvatarSelector';\nimport CatAvatar from './CatAvatar';\nimport RobotAvatar from './RobotAvatar';\nimport MouseAvatar from './MouseAvatar';\n\nconst VoiceChat = ({ setCurrentView }) => {\n    const [speaking, setSpeaking] = useState(false);\n    const [showLanguages, setShowLanguages] = useState(false);\n    const [selectedLanguage, setSelectedLanguage] = useState('EN');\n    const [botResponse, setBotResponse] = useState('What do you know about Finance?');\n    const [responseWords, setResponseWords] = useState([]);  \n    const [currentWordIndex, setCurrentWordIndex] = useState(0); \n    const recognitionRef = useRef(null); \n    const audioInstanceRef = useRef(null); \n    const serverUrl = 'https://leapthelimit-1057493174729.me-west1.run.app'; \n    const wordsPerBatch = 7;  \n    const responseUpdateInterval = 2500;  \n    const [audioPlaying, setAudioPlaying] = useState(false);\n    const [currentAvatar, setCurrentAvatar] = useState('fox');\n    const [isListening, setIsListening] = useState(false);\n\n    // Set up speech recognition (webkitSpeechRecognition for Chrome)\n    useEffect(() => {\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        if (SpeechRecognition) {\n            const recognition = new SpeechRecognition();\n            recognition.continuous = false;\n            recognition.interimResults = false;\n            recognition.lang = selectedLanguage === 'EN' ? 'en-US' : selectedLanguage === 'عر' ? 'ar-SA' : 'he-IL';\n\n            recognition.onstart = () => {\n                if (audioInstanceRef.current) {\n                    audioInstanceRef.current.pause();\n                    audioInstanceRef.current = null;\n                }\n                setIsListening(true);\n                setSpeaking(false);\n                setBotResponse('Listening...');\n                document.querySelectorAll('.circle').forEach(circle => {\n                    circle.classList.add('circle-listening');\n                });\n            };\n\n            recognition.onerror = (event) => {\n                console.error('Speech recognition error', event);\n                setBotResponse('Error occurred while listening.');\n                document.querySelectorAll('.circle').forEach(circle => {\n                    circle.classList.remove('circle-listening');\n                });\n                setSpeaking(false);\n                setIsListening(false);\n            };\n\n            recognition.onend = () => {\n                setIsListening(false);\n                setSpeaking(false);\n                setBotResponse('Generating...');\n                document.querySelectorAll('.circle').forEach(circle => {\n                    circle.classList.remove('circle-listening');\n                });\n            };\n\n            recognition.onresult = async (event) => {\n                const transcript = event.results[0][0].transcript;\n                setBotResponse('');\n                await handleUserMessage(transcript);\n            };\n\n            recognitionRef.current = recognition;\n        } else {\n            alert('Speech recognition is not supported in this browser. Please use Google Chrome.');\n        }\n    }, [selectedLanguage]);\n\n    const startListening = () => {\n        if (recognitionRef.current) {\n            recognitionRef.current.start();\n            setBotResponse('Listening...');\n        }\n    };\n\n    const toggleLanguages = () => {\n        setShowLanguages(!showLanguages);\n    };\n\n    const getLanguageCode = () => {\n        switch(selectedLanguage) {\n            case 'עב':\n                return 'he-IL';\n            case 'عر':\n                return 'ar-SA';\n            case 'EN':\n            default:\n                return 'en-US';\n        }\n    };\n\n    const handleUserMessage = useCallback(async (message) => {\n        try {\n            const chatResponse = await fetch(`${serverUrl}/chat`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    message, \n                    language: getLanguageCode()\n                })\n            });\n            const chatData = await chatResponse.json();\n            const botReply = chatData.response;\n\n            await fetch(`${serverUrl}/save-chat-message`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    message, category: 'user'\n                })\n            });\n\n            await fetch(`${serverUrl}/save-chat-message`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    message: botReply, category: 'bot'\n                })\n            });\n\n            // Get voice based on avatar\n            const getVoiceForAvatar = () => {\n                switch(currentAvatar) {\n                    case 'robot':\n                        return 'en-US-Standard-B'; // More robotic male voice\n                    case 'cat':\n                        return 'en-US-Standard-E'; // Higher pitched female voice\n                    case 'fox':\n                    default:\n                        return 'en-US-Standard-C'; // Neutral female voice\n                }\n            };\n\n            const ttsResponse = await fetch(`${serverUrl}/synthesize`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    text: botReply, \n                    language_code: getLanguageCode(),\n                    voice_name: getVoiceForAvatar(),\n                    speaking_rate: currentAvatar === 'robot' ? 0.9 : 1.0,\n                    pitch: currentAvatar === 'robot' ? 0.5 : \n                           currentAvatar === 'cat' ? 1.2 : 1.0\n                })\n            });\n            const ttsData = await ttsResponse.json();\n            const audioContent = ttsData.audioContent;\n\n            setResponseWords(botReply.split(' '));  \n            setCurrentWordIndex(0);  \n\n            if (audioInstanceRef.current) {\n                audioInstanceRef.current.pause();\n            }\n            audioInstanceRef.current = new Audio(`data:audio/mp3;base64,${audioContent}`);\n            \n            audioInstanceRef.current.onplay = () => {\n                setAudioPlaying(true);\n                setSpeaking(true);\n            };\n            \n            audioInstanceRef.current.onended = () => {\n                setAudioPlaying(false);\n                setSpeaking(false);\n            };\n            \n            audioInstanceRef.current.play();\n        } catch (error) {\n            console.error('Error:', error);\n            setBotResponse('Error occurred while processing your message.');\n            setSpeaking(false);\n            setAudioPlaying(false);\n        }\n    }, [getLanguageCode, serverUrl, currentAvatar]);\n\n    useEffect(() => {\n        if (responseWords.length > 0 && currentWordIndex < responseWords.length) {\n            const timer = setTimeout(() => {\n                const wordsToShow = responseWords.slice(currentWordIndex, currentWordIndex + wordsPerBatch).join(' ');\n                setBotResponse(wordsToShow); \n                setCurrentWordIndex((prevIndex) => prevIndex + wordsPerBatch);\n            }, responseUpdateInterval);\n\n            return () => clearTimeout(timer);\n        }\n    }, [currentWordIndex, responseWords, handleUserMessage, wordsPerBatch, responseUpdateInterval]);\n\n    // Add effect to handle avatar changes\n    useEffect(() => {\n        // Stop current audio when avatar changes\n        if (audioInstanceRef.current) {\n            audioInstanceRef.current.pause();\n            audioInstanceRef.current = null;\n        }\n        setAudioPlaying(false);\n        setSpeaking(false);\n        setBotResponse('What do you know about Finance?');\n    }, [currentAvatar]);\n\n    const renderAvatar = () => {\n        switch(currentAvatar) {\n            case 'robot':\n                return <RobotAvatar \n                    isSpeaking={speaking || audioPlaying} \n                    isListening={isListening}\n                />;\n            case 'cat':\n                return <CatAvatar \n                    isSpeaking={speaking || audioPlaying} \n                    isListening={isListening}\n                />;\n            case 'mouse':\n                return <MouseAvatar \n                    isSpeaking={speaking || audioPlaying} \n                    isListening={isListening}\n                />;\n            case 'fox':\n            default:\n                return <FoxAvatar \n                    isSpeaking={speaking || audioPlaying} \n                    isListening={isListening}\n                />;\n        }\n    };\n\n    return (\n        <>\n            <Header setCurrentView={setCurrentView} />\n            <div className=\"bg-black h-full w-full flex flex-col items-center justify-start text-white relative overflow-hidden\">\n                <div className='h-[45%] w-full flex justify-center items-center'>\n                    {renderAvatar()}\n                </div>\n\n                <div className='h-[45%] flex items-start justify-center px-4'>\n                    <p className=\"text-2xl font-medium text-center max-w-[80%]\">\n                        {botResponse.split(' ').map((word, index) => (\n                            <span key={index} className='text-white'>{word} </span>\n                        ))}\n                    </p>\n                </div>\n\n                <div className=\"absolute bottom-14 left-0 right-0 flex justify-between items-center px-4\">\n                    <div className=\"flex space-x-4\">\n                        <AvatarSelector \n                            currentAvatar={currentAvatar}\n                            onAvatarChange={setCurrentAvatar}\n                        />\n                    </div>\n                    <button \n                        onClick={startListening} \n                        className=\"p-4 rounded-full\" \n                        style={{ background: `url(${micBg})`, backgroundSize: 'cover' }}\n                    >\n                        {speaking ? <AudioLines size={30} /> : <MicIcon size={30} />}\n                    </button>\n                    <div className=\"relative\">\n                        <button \n                            onClick={toggleLanguages} \n                            className=\"p-2 rounded-full bg-[#272626]\"\n                        >\n                            <Globe size={24} />\n                        </button>\n                        {showLanguages && (\n                            <div className=\"absolute bottom-full right-1 mb-2 flex flex-col space-y-2\">\n                                {['עב', 'عر', 'EN'].map((lang) => (\n                                    <button\n                                        key={lang}\n                                        onClick={() => {\n                                            setSelectedLanguage(lang);\n                                            setShowLanguages(false);\n                                        }}\n                                        className={`p-2 rounded-full text-xs flex items-center justify-center ${\n                                            selectedLanguage === lang ? 'bg-purple-600' : 'bg-[#272626]'\n                                        }`}\n                                    >\n                                        {lang}\n                                    </button>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default VoiceChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}