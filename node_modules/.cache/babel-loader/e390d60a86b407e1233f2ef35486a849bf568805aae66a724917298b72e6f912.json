{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import micIcon from'../assets/images/mic.svg';import chatIcon from'../assets/images/chat.svg';import gameIcon from'../assets/images/game.svg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const getIcon=type=>{switch(type){case'voice':return/*#__PURE__*/_jsx(\"img\",{src:micIcon,alt:\"Mic Icon\"});case'chat':return/*#__PURE__*/_jsx(\"img\",{src:chatIcon,alt:\"Chat Icon\"});case'game':return/*#__PURE__*/_jsx(\"img\",{src:gameIcon,alt:\"Game Icon\"});default:return/*#__PURE__*/_jsx(\"img\",{src:micIcon,alt:\"Mic Icon\"});}};export default function History(_ref){let{setCurrentView}=_ref;const[historyItems,setHistoryItems]=useState([]);// Function to group the conversations into pairs of (user + bot)\nconst groupConversations=history=>{const conversations=[];let currentConversation={userMessage:'',botResponse:''};history.forEach(message=>{if(message.category==='user'){currentConversation.userMessage=message.message;}else if(message.category==='bot'){currentConversation.botResponse=message.message;conversations.push(currentConversation);currentConversation={userMessage:'',botResponse:''};}});return conversations;};// Fetch chat history with retry mechanism and AbortController\nconst fetchChatHistory=useCallback(async function(){let retryCount=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;const controller=new AbortController();// Create an AbortController instance\ntry{const response=await fetch('https://leapthelimit-1057493174729.me-west1.run.app/chat-history',{signal:controller.signal});if(!response.ok){throw new Error('Failed to fetch chat history');}const data=await response.json();const{history}=data;if(Array.isArray(history)){const conversations=groupConversations(history);setHistoryItems(conversations);}else{console.error('Unexpected data format:',data);}}catch(error){if(error.name==='AbortError'){console.error('Request aborted: ',error);}else if(error.message==='Failed to fetch'){if(retryCount<3){console.log(`Retrying... (${retryCount+1}/3)`);setTimeout(()=>fetchChatHistory(retryCount+1),1000);// Retry after 1 second\n}else{console.error('Error fetching chat history after multiple attempts:',error);}}else{console.error('Error fetching chat history:',error);}}},[]);useEffect(()=>{const controller=new AbortController();// Create an AbortController instance\nfetchChatHistory();return()=>{controller.abort();// Cleanup and abort the fetch if the component unmounts\n};},[fetchChatHistory]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-4\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-white text-md font-medium\",children:\"History\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentView('history_list'),className:\"text-gray-400 text-sm\",children:\"See all\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:historyItems.slice(0,2).map((item,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-zinc-800 p-3 rounded-lg flex items-center justify-start space-x-3\",children:[getIcon(item.type),/*#__PURE__*/_jsxs(\"span\",{className:\"text-gray-300 text-xs\",children:[item.userMessage.substring(0,50),\"...\"]})]},index))})]});}","map":{"version":3,"names":["React","useState","useEffect","useCallback","micIcon","chatIcon","gameIcon","jsx","_jsx","jsxs","_jsxs","getIcon","type","src","alt","History","_ref","setCurrentView","historyItems","setHistoryItems","groupConversations","history","conversations","currentConversation","userMessage","botResponse","forEach","message","category","push","fetchChatHistory","retryCount","arguments","length","undefined","controller","AbortController","response","fetch","signal","ok","Error","data","json","Array","isArray","console","error","name","log","setTimeout","abort","children","className","onClick","slice","map","item","index","substring"],"sources":["C:/Users/a222_/Desktop/finlit-widget-main/src/components/History.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport micIcon from '../assets/images/mic.svg';\nimport chatIcon from '../assets/images/chat.svg';\nimport gameIcon from '../assets/images/game.svg';\n\nexport const getIcon = (type) => {\n    switch (type) {\n        case 'voice':\n            return <img src={micIcon} alt=\"Mic Icon\" />;\n        case 'chat':\n            return <img src={chatIcon} alt=\"Chat Icon\" />;\n        case 'game':\n            return <img src={gameIcon} alt=\"Game Icon\" />;\n        default:\n            return <img src={micIcon} alt=\"Mic Icon\" />;\n    }\n};\n\nexport default function History({ setCurrentView }) {\n    const [historyItems, setHistoryItems] = useState([]);\n\n    // Function to group the conversations into pairs of (user + bot)\n    const groupConversations = (history) => {\n        const conversations = [];\n        let currentConversation = { userMessage: '', botResponse: '' };\n\n        history.forEach((message) => {\n            if (message.category === 'user') {\n                currentConversation.userMessage = message.message;\n            } else if (message.category === 'bot') {\n                currentConversation.botResponse = message.message;\n                conversations.push(currentConversation);\n                currentConversation = { userMessage: '', botResponse: '' };\n            }\n        });\n\n        return conversations;\n    };\n\n    // Fetch chat history with retry mechanism and AbortController\n    const fetchChatHistory = useCallback(async (retryCount = 0) => {\n        const controller = new AbortController(); // Create an AbortController instance\n        try {\n            const response = await fetch('https://leapthelimit-1057493174729.me-west1.run.app/chat-history', {\n                signal: controller.signal,\n            });\n            if (!response.ok) {\n                throw new Error('Failed to fetch chat history');\n            }\n            const data = await response.json();\n            const { history } = data;\n\n            if (Array.isArray(history)) {\n                const conversations = groupConversations(history);\n                setHistoryItems(conversations);\n            } else {\n                console.error('Unexpected data format:', data);\n            }\n        } catch (error) {\n            if (error.name === 'AbortError') {\n                console.error('Request aborted: ', error);\n            } else if (error.message === 'Failed to fetch') {\n                if (retryCount < 3) {\n                    console.log(`Retrying... (${retryCount + 1}/3)`);\n                    setTimeout(() => fetchChatHistory(retryCount + 1), 1000); // Retry after 1 second\n                } else {\n                    console.error('Error fetching chat history after multiple attempts:', error);\n                }\n            } else {\n                console.error('Error fetching chat history:', error);\n            }\n        }\n    }, []);\n\n    useEffect(() => {\n        const controller = new AbortController(); // Create an AbortController instance\n\n        fetchChatHistory();\n\n        return () => {\n            controller.abort(); // Cleanup and abort the fetch if the component unmounts\n        };\n    }, [fetchChatHistory]);\n\n    return (\n        <div>\n            <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-white text-md font-medium\">History</h2>\n                <button onClick={() => setCurrentView('history_list')} className=\"text-gray-400 text-sm\">See all</button>\n            </div>\n            <div className=\"space-y-2\">\n                {historyItems.slice(0, 2).map((item, index) => (\n                    <div key={index} className=\"bg-zinc-800 p-3 rounded-lg flex items-center justify-start space-x-3\">\n                        {getIcon(item.type)}\n                        <span className=\"text-gray-300 text-xs\">\n                            {item.userMessage.substring(0, 50)}...\n                        </span>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}